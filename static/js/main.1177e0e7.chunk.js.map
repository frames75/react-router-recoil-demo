{"version":3,"sources":["reportWebVitals.js","App.js","home.js","routes/todoListRecoil.js","data.js","routes/invoices.js","routes/invoice.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","App","className","href","target","rel","style","color","display","margin","to","Home","todoListState","atom","key","default","todoListFilterState","filteredTodoListState","selector","get","filter","list","item","isComplete","todoListStatsState","values","Map","set","length","TodoListStats","todoStats","useRecoilValue","arrKeys","keys","map","TodoListFilters","useRecoilState","setFilter","value","onChange","TodoItemCreator","useState","inputValue","setInputValue","setTodoList","useSetRecoilState","type","onClick","oldTodoList","id","text","TodoItem","todoList","index","findIndex","listItem","newList","replaceItemAtIndex","checked","arr","slice","removeItemAtIndex","newValue","TodoList","todoItem","ShowTodoList","invoices","name","number","amount","due","QueryNavLink","props","location","useLocation","search","Invoices","useSearchParams","searchParams","setSearchParams","event","handleChangeSearch","invoice","toLowerCase","startsWith","isActive","Invoice","params","useParams","navigate","useNavigate","parseInt","invoiceId","find","padding","deleteInvoice","ReactDOM","render","StrictMode","path","element","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.1177e0e7.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './App.css';\n// import ShowTodoList from './showTodoList';\nimport { Outlet, Link } from 'react-router-dom';\n\n/**\n * Declare state management wraper\n */\nimport {\n  RecoilRoot,\n} from 'recoil';\n\nfunction App() {\n  return (\n    <RecoilRoot>\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>\n          React Router & Recoil Demo\n        </h2>\n        <div className=\"flex-row\">\n          <a\n            className=\"App-link\"\n            href=\"https://reactrouter.com/docs/en/v6/getting-started/tutorial\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            React Router tutorial\n          </a> &nbsp; | &nbsp;\n          <a\n            className=\"App-link\"\n            href=\"https://recoiljs.org/docs/basic-tutorial/intro\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            React Recoil tutorial\n          </a>\n        </div>\n      </header>\n      <div className=\"App-body\">\n        <nav className=\"App-nav\">\n          <Link \n            style={{ color:'lightblue', display: \"block\", margin: \"0.5rem 0\" }}\n            to=\"/\">\n              Home\n          </Link>\n          <Link \n            style={{ color:'lightblue', display: \"block\", margin: \"0.5rem 0\" }}\n            to=\"/invoices\">\n              Invoices\n          </Link>\n          <Link \n            style={{ color:'lightblue', display: \"block\", margin: \"0.5rem 0\" }}          \n            to=\"/todoListRecoil\">\n              ToDo List\n          </Link>\n        </nav>\n        <main className=\"App-content\">\n          <Outlet />\n        </main>\n      </div>\n    </div>\n    </RecoilRoot>\n  );\n}\n\nexport default App;\n","import { Link } from 'react-router-dom';\n\nfunction Home() {\n  return (\n    <div style={{'textAlign': 'left'}}>\n      <h2>Home Page</h2>\n      <ul>This is a sample App of use of this <b>React</b> packages:\n        <br/>\n        <br/>\n        <li>\n          <b>React Router v6:</b> Client-side routing.\n          <p>You can test the use of this package by clicking \n            the <Link to='/invoices'>Invoices</Link> link on the Navbar.</p>\n        </li>\n        <li>\n        <b>Recoil:</b> State management.\n        <p>You can test the use of this package by clicking \n          the <Link to='todoListRecoil'>ToDo List</Link> link on the Navbar.</p>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default Home;\n","import { useState } from 'react';\n\n/**\n * Declare the components for the\n * state management.\n */\nimport {\n  atom,\n  selector,\n  useRecoilState,\n  useRecoilValue,\n  useSetRecoilState,\n} from 'recoil';\n\nconst todoListState = atom({\n  key: 'todoListState',\n  default: [],\n});\n\nconst todoListFilterState = atom({\n  key: 'todoListFilterState',\n  default: 'Show All',\n});\n\nconst filteredTodoListState = selector({\n  key: 'filteredTodoListState',\n  get: ({ get }) => {\n    const filter = get(todoListFilterState);\n    const list = get(todoListState);\n\n    switch (filter) {\n      case 'Show Completed':\n        return list.filter((item) => item.isComplete);\n      case 'Show Uncompleted':\n        return list.filter((item) => !item.isComplete);\n      default:\n        return list;\n    }\n  },\n});\n\nconst todoListStatsState = selector({\n  key: 'todoListStatsState',\n  get: ({ get }) => {\n    const list = get(todoListState);\n    const values = new Map();\n\n    values.set('total', list.length);\n    values.set('total_Completed', list.filter(item => item.isComplete).length);\n    values.set('total_Uncompleted', values.get('total') - values.get('total_Completed'));\n    values.set('percent_Completed', (values.get('total')>0) ? values.get('total_Completed')*100/values.get('total') : 0);\n\n    return values;\n  },\n});\n\nfunction TodoListStats() {\n  const todoStats = useRecoilValue(todoListStatsState);\n  const arrKeys = todoStats ? [...todoStats.keys()] : null;\n\n  return (\n    <ul>\n    { arrKeys && arrKeys.map((item) =>\n        <li key={item}>\n          {item}: {todoStats.get(item)}\n          {item==='percent_Completed' ? '%' : ''}\n        </li>\n      )\n    }\n    </ul>\n  );\n}\n\nfunction TodoListFilters() {\n  const [filter, setFilter] = useRecoilState(todoListFilterState);\n\n  const updateFilter = ({target: {value}}) => {\n    setFilter(value);\n  };\n\n  return (\n    <>\n      Filter: &nbsp;\n      <select value={filter} onChange={updateFilter}>\n        <option value=\"Show All\">All</option>\n        <option value=\"Show Completed\">Completed</option>\n        <option value=\"Show Uncompleted\">Uncompleted</option>\n      </select>\n    </>\n  );\n}\n\nfunction TodoItemCreator() {\n  const [inputValue, setInputValue] = useState('');\n  const setTodoList = useSetRecoilState(todoListState);\n\n  const addItem = () => {\n    setTodoList((oldTodoList) => [\n      ...oldTodoList,\n      {\n        id: getId(),\n        text: inputValue,\n        isComplete: false,\n      },\n    ]);\n    setInputValue('');\n  };\n\n  const onChange = ({target: {value}}) => {\n    setInputValue(value);\n  };\n\n  return (\n    <div>\n      <input type=\"text\" value={inputValue} onChange={onChange} />\n      <button onClick={addItem}>Add</button>\n    </div>\n  );\n}\n\nfunction TodoItem({ item }) {\n  const [todoList, setTodoList] = useRecoilState(todoListState);\n  const index = todoList.findIndex((listItem) => listItem === item);\n\n  const editItemText = ({ target: {value} }) => {\n    const newList = replaceItemAtIndex(todoList, index, {\n      ...item,\n      text: value,\n    });\n\n    setTodoList(newList);\n  };\n\n  const toggleItemCompletion = () => {\n    const newList = replaceItemAtIndex(todoList, index, {\n      ...item,\n      isComplete: !item.isComplete,\n    });\n\n    setTodoList(newList);\n  };\n\n  const deleteItem = () => {\n    const newList = removeItemAtIndex(todoList, index);\n\n    setTodoList(newList);\n  };\n\n  return (\n    <div>\n      <input type=\"text\" value={item.text} onChange={editItemText} />\n      <input\n        type=\"checkbox\"\n        checked={item.isComplete}\n        onChange={toggleItemCompletion}\n      />\n      <button onClick={deleteItem}>X</button>\n    </div>\n  );\n}\n\nfunction replaceItemAtIndex(arr, index, newValue) {\n  return [...arr.slice(0, index), newValue, ...arr.slice(index + 1)];\n}\n\nfunction removeItemAtIndex(arr, index) {\n  return [...arr.slice(0, index), ...arr.slice(index + 1)];\n}\n\n// utility for creating unique Id\nlet id = 0;\nfunction getId() {\n  return id++;\n}\n\nfunction TodoList() {\n  const todoList = useRecoilValue(filteredTodoListState);\n\n  return (\n    <>\n      <TodoListStats />\n      <TodoListFilters />\n      <TodoItemCreator />\n\n      {todoList.map((todoItem) => (\n        <TodoItem key={todoItem.id} item={todoItem} />\n      ))}\n    </>\n  )\n}\n\nfunction ShowTodoList() {\n  return (\n    <main className=\"App-main\">\n      <h2>ToDo List</h2>\n      <h4>[Recoil State Management]</h4>\n      <TodoList />\n    </main>\n  )\n}\n\nexport default ShowTodoList;\n","let invoices = [\n  {\n    name: \"Santa Monica\",\n    number: 1995,\n    amount: \"$10,800\",\n    due: \"12/05/1995\"\n  },\n  {\n    name: \"Stankonia\",\n    number: 2000,\n    amount: \"$8,000\",\n    due: \"10/31/2000\"\n  },\n  {\n    name: \"Ocean Avenue\",\n    number: 2003,\n    amount: \"$9,500\",\n    due: \"07/22/2003\"\n  },\n  {\n    name: \"Tubthumper\",\n    number: 1997,\n    amount: \"$14,000\",\n    due: \"09/01/1997\"\n  },\n  {\n    name: \"Wide Open Spaces\",\n    number: 1998,\n    amount: \"$4,600\",\n    due: \"01/27/2998\"\n  }\n];\n\nexport function getInvoices() {\n  return invoices;\n}\n\nexport function getInvoice(number) {\n  return invoices.find(\n    invoice => invoice.number === number\n  );\n}\n\nexport function deleteInvoice(number) {\n  invoices = invoices.filter(\n    invoice => invoice.number !== number\n  );\n}\n","import { \n  Outlet,\n  NavLink,\n  useSearchParams,\n  useLocation,\n} from 'react-router-dom';\nimport { getInvoices } from '../data';\n\n/**\n * useLocation returns something like:\n * {\n      pathame: \"/invoices\",\n      search: \"?filter=sa\",\n      hash: \"\",\n      state: null,\n      key: \"ae4cz2j\"\n    }\n */\nfunction QueryNavLink({ to, ...props}) {\n  let location = useLocation();\n  return <NavLink to={to + location.search} {...props} />;\n}\n\nexport default function Invoices() {\n  const invoices = getInvoices();\n  let [searchParams, setSearchParams] = useSearchParams();\n\n  const handleChangeSearch = (event) => {\n    let filter = event.target.value;\n    if (filter)\n      setSearchParams({ filter });\n    else\n      setSearchParams({});\n  }\n\n  return (\n    <main className=\"App-body\">\n      <nav className=\"App-nav\">\n        <h2>Invoices</h2>\n        <label>Find: </label>\n        <input\n          value={searchParams.get(\"filter\") || \"\"}\n          onChange={event => handleChangeSearch(event)}\n        />\n        <br/>\n        { invoices\n          .filter(invoice => {\n            const filter = searchParams.get(\"filter\");\n            if (!filter) return true;\n            const name = invoice.name.toLowerCase();\n            return name.startsWith(filter.toLowerCase());\n          })\n          .map( invoice => (\n            <QueryNavLink\n              style={({ isActive }) => {\n                return { color: isActive ? 'red' : 'lightblue', \n                          display: \"block\", \n                          margin: \"0.5rem 0\" };\n                }}\n              to={`/invoices/${invoice.number}`}\n              key={invoice.number}\n            >\n              {invoice.name}\n            </QueryNavLink>\n        ))}\n      </nav>\n      <div className=\"App-content\">\n        <Outlet />\n      </div>\n    </main>\n  )\n}\n","import { useParams, useNavigate } from \"react-router-dom\";\nimport { getInvoice, deleteInvoice } from \"../data\";\n\nexport default function Invoice() {\n  let params = useParams();\n  let navigate = useNavigate();\n  let invoice = getInvoice(parseInt(params.invoiceId, 10));\n\n  return (\n    <main style={{ padding: \"1rem\" }}>\n      <h2>Total Due: {invoice.amount}</h2>\n      <p>\n        {invoice.name}: {invoice.number}\n      </p>\n      <p>Due Date: {invoice.due}</p>\n      <p>\n        <button\n          onClick={() => {\n            deleteInvoice(invoice.number);\n            navigate(\"/invoices\");\n          }}\n        >\n          Delete\n        </button>\n      </p>\n    </main>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport App from './App';\nimport Home from './home.js';\nimport TodoListRecoil from \"./routes/todoListRecoil\";\nimport Invoices from \"./routes/invoices\";\nimport Invoice from \"./routes/invoice\";\n\n/**\n * Connect the app to the browser's URL\n */\nimport { \n    BrowserRouter,\n    Routes,\n    Route \n} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Routes>\n        <Route path='/' element={<App />} >\n          <Route index\n                 element={<Home />}\n          />\n          <Route path='todoListRecoil' element={<TodoListRecoil />} />\n          <Route path='invoices' element={<Invoices />} >\n            <Route index\n              element={\n                <main>\n                  <p>Select an invoice</p>\n                </main>\n              }\n            />\n            <Route path=':invoiceId' element={<Invoice />} />\n          </Route>\n          <Route path='*'\n              element={\n                <main>\n                  <p>There's nothing here!</p>\n                </main>\n              }>\n          </Route>\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}